// Amiodarone - QT-Prolonging Agents DDI Alerting Rule
// Written By: Sam Rosko
// Last Update: 2017-04-10
// Status: Completed, though the explanation needs to be justified
// Expected Output: 3 patients, 2 alerts

package com.sample

//list any import classes here.
import function com.sample.DRLLogger.*;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.Calendar;
import java.lang.String;

import com.sample.model.ConceptSetItem;
import com.sample.model.RHSState;

import edu.pitt.dbmi.ohdsiv5.db.ConditionEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.DrugStrength;
import edu.pitt.dbmi.ohdsiv5.db.ExtendedDrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.Measurement;
import edu.pitt.dbmi.ohdsiv5.db.Person;
import edu.pitt.dbmi.ohdsiv5.db.VisitOccurrence;


/////////// 
// declare any global variables here
/////////// 
global java.lang.String currentDateStr;
global org.hibernate.Session hibernateSession;
global java.util.Calendar currentDate;
global java.util.Calendar within48hours;
global java.util.Calendar within28days;


/////////// 
// declare any types here
/////////// 


/////////// 
// Rules
/////////// 

// The first rule is a basic check to identify all patients on any dosage or form of amiodarone and a qt-prolonging agent at the same time
rule "AMIODARONE - QT AGENTS -- NO FILTER"
    when
      // First, we look for patients exposed to amiodarone on the ingredient level
      $clinDrugConcept1 : ConceptSetItem(csName == "Amiodarones Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId())       
      // Second, we similarly look for exposure to a QT-prolonging agent on the ingredient level
      $clinDrugConcept2 : ConceptSetItem(csName == "QT-Agents Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())
      // Next, we identify the specific drug exposures for both amiodarone and the qt-agent
      $clinDrugConcept3 : ConceptSetItem(csName == "Amiodarones")
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
      $clinDrugConcept4 : ConceptSetItem(csName == "QT-Agents")
      $dexp2 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())
      // This creates the patient as an object that can be used in the RHS state in the right hand side of the rule
      $person : Person(personId == $de1.getPersonId())
    then
      // This creates a new "state" for any patients who are found to be on both drugs...
      // This state can be used as an input on further rules to quickly filter to only those patients who have made it through previous rules
      RHSState rhsCur = new RHSState("basic concomitant exposure of amiodarone and a qt-prolonging agent", "yes", $person);
      insertLogical(rhsCur);
      // The output string reports simply that a potential interaction was identified through concurrent drug exposures and lists the drug IDs
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Amiodarone: %s; QT-Agent: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tamiodarone and a qt-prolonging agent\tbasic concomitant exposure", currentDateStr, $person.getPersonId());
      System.out.println(s);
end

rule "AMIODARONE - QT AGENTS -- Flecainide"
    when
	// This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of amiodarone and a qt-prolonging agent" && state == "yes", $person : person)	
        // Next, we pull in the drug era for flecainide
        $clinDrugConcept1 : ConceptSetItem(csName == "Flecainides Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // From there, we can pull in the specific flecainide drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Flecainides")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId())      
    then
	// This is a placeholder RHS state that is currently not used any further in the rule
        RHSState rhsNN = new RHSState("amiodarone and flecainide", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
	// This outputs the recommendations and rationale for the patient because this is a leaf node  
        String s = String.format(
          "Amiodarone - QT-Prolonging Agent interaction for patient: %s.\n\tClinical implication: Risk of long QT syndrome.\n\tMitigating factor: Presence of amiodarone and a QT-prolonging agent, flecainide.\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Amiodarone is associated with a prolonged QT interval, which would be worsened by co-prescription with other QT prolonging agents, resulting in long QT syndrome.", 
          $de1.getPersonId());
        System.out.println(s);
	s = String.format("DATA\t%s\t%s\tamiodarone and a qt-prolonging agent\tamiodarone and flecainide", currentDateStr, $person.getPersonId());
        System.out.println(s);
end

rule "AMIODARONE - QT AGENTS -- Ondansetron"
    when
	// This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of amiodarone and a qt-prolonging agent" && state == "yes", $person : person)	
        // Next, we pull in the drug era for ondansetron
        $clinDrugConcept1 : ConceptSetItem(csName == "Ondansetrons Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // From there, we can pull in the specific ondansetron drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Ondansetrons")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 16)      
    then
	// This is a placeholder RHS state that is currently not used any further in the rule
        RHSState rhsNN = new RHSState("amiodarone and ondansetron", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
	// This outputs the recommendations and rationale for the patient because this is a leaf node  
        String s = String.format(
          "Amiodarone - QT-Prolonging Agent interaction for patient: %s.\n\tClinical implication: Risk of long QT syndrome.\n\tMitigating factor: Presence of amiodarone and a QT-prolonging agent, ondansetron, at a high dose (Daily Dosage: %s mg/day, Threshold Value of 16.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Amiodarone is associated with a prolonged QT interval, which would be worsened by co-prescription with other QT prolonging agents, resulting in long QT syndrome.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
        s = String.format("DATA\t%s\t%s\tamiodarone and a qt-prolonging agent\tamiodarone and ondansetron", currentDateStr, $person.getPersonId());
      System.out.println(s);
end

