// Epi - Beta-Blockers DDI Alerting Rule
// Written By: Sam Rosko
// Last Update: 2017-04-11
// Status: Completed
// Expected Output: 16 patients, 16 alerts
// KNOWN ISSUE: Esmolol rule is a placeholder, cannot be implemented in OHDSI model due to nature of data and rule requirements (need IV dispensing data)

package com.sample

//list any import classes here.
import function com.sample.DRLLogger.*;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.Calendar;
import java.lang.String;

import com.sample.model.ConceptSetItem;
import com.sample.model.RHSState;

import edu.pitt.dbmi.ohdsiv5.db.ConditionEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.DrugStrength;
import edu.pitt.dbmi.ohdsiv5.db.ExtendedDrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.Measurement;
import edu.pitt.dbmi.ohdsiv5.db.Person;


/////////// 
// declare any global variables here
/////////// 
global org.hibernate.Session hibernateSession;
global java.lang.String currentDateStr;
global java.util.Calendar currentDate;
global java.util.Calendar within48hours;
global java.util.Calendar within28days;


/////////// 
// declare any types here
/////////// 


/////////// 
// Rules
/////////// 

// The first rule is a basic check to identify all patients on any dosage or form of epinephrine and a beta-blocker at the same time (beta-blocker first)
rule "EPINEPHRINE - BETA-BLOCKERS - BB FIRST -- NO FILTER"  
    when
      // First, we look for patients exposed to epinephrine on the ingredient level
      $clinDrugConcept1 : ConceptSetItem(csName == "Epinephrines Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      // Second, we similarly look for exposure to a beta-blocker on the ingredient level
      $clinDrugConcept2 : ConceptSetItem(csName == "Beta-Blockers Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())
      // Next, we identify the specific drug exposures for both epinephrine and the beta-blocker
      // The epinephrine concept set excludes opthalmic and inhaled epinephrine
      $clinDrugConcept3 : ConceptSetItem(csName == "Epinephrines") 
      $clinDrugConcept4 : ConceptSetItem(csName == "Beta-Blockers")
      // beta-blocker before epinephrine (handle the other case in a very similar rule below 
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal.get(Calendar.DAY_OF_MONTH) == currentDate.get(Calendar.DAY_OF_MONTH) && drugExposureStartDateCal.get(Calendar.YEAR) == currentDate.get(Calendar.YEAR)
          && drugConceptId != null && drugConceptId == $clinDrugConcept3.getConceptId()
          && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())
      $dexp2 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= $dexp1.getDrugExposureStartDateCal()
          && drugExposureEndDateCal != null && drugExposureEndDateCal >= $dexp1.getDrugExposureStartDateCal()
          && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())

      // This creates the patient as an object that can be used in the RHS state in the right hand side of the rule
      $person : Person(personId == $de1.getPersonId())
    then  
      // This creates a new "state" for any patients who are found to be on both drugs...
      // This state can be used as an input on further rules to quickly filter to only those patients who have made it through previous rules
      /* String debugDexp = String.format("DEBUG\n\tdexp1: %s\n\tdexp2: %s\n\tCREATE RHS FOR %s", $dexp1.getDrugExposureId(), $dexp2.getDrugExposureId(),$person.getPersonId());
      System.out.println(debugDexp);
      System.out.flush(); 
      */
      RHSState rhsCur = new RHSState("basic concomitant exposure of epinephrine and a beta-blocker", "yes", $person);
      insertLogical(rhsCur);
      // The output string reports simply that a potential interaction was identified through concurrent drug exposures and lists the drug IDs
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Epinephrine: %s; Beta-Blocker: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
      System.out.flush(); 
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tbasic concomitant exposure\t%s\t%d-%d-%d %d:%d:%d\t%d-%d-%d %d:%d:%d\t%s\t%d-%d-%d %d:%d:%d\t%d-%d-%d %d:%d:%d",
            currentDateStr,
      $person.getPersonId(),
      $dexp1.getDrugConceptId(),
      $dexp1.getDrugExposureStartDateCal().get(Calendar.YEAR), $dexp1.getDrugExposureStartDateCal().get(Calendar.MONTH) + 1, $dexp1.getDrugExposureStartDateCal().get(Calendar.DAY_OF_MONTH), $dexp1.getDrugExposureStartDateCal().get(Calendar.HOUR), $dexp1.getDrugExposureStartDateCal().get(Calendar.MINUTE), $dexp1.getDrugExposureStartDateCal().get(Calendar.SECOND),
      $dexp1.getDrugExposureEndDateCal().get(Calendar.YEAR), $dexp1.getDrugExposureEndDateCal().get(Calendar.MONTH) + 1, $dexp1.getDrugExposureEndDateCal().get(Calendar.DAY_OF_MONTH), $dexp1.getDrugExposureEndDateCal().get(Calendar.HOUR), $dexp1.getDrugExposureEndDateCal().get(Calendar.MINUTE), $dexp1.getDrugExposureEndDateCal().get(Calendar.SECOND),
      $dexp2.getDrugConceptId(),
      $dexp2.getDrugExposureStartDateCal().get(Calendar.YEAR), $dexp2.getDrugExposureStartDateCal().get(Calendar.MONTH) + 1, $dexp2.getDrugExposureStartDateCal().get(Calendar.DAY_OF_MONTH), $dexp2.getDrugExposureStartDateCal().get(Calendar.HOUR), $dexp2.getDrugExposureStartDateCal().get(Calendar.MINUTE), $dexp2.getDrugExposureStartDateCal().get(Calendar.SECOND),
      $dexp2.getDrugExposureEndDateCal().get(Calendar.YEAR), $dexp2.getDrugExposureEndDateCal().get(Calendar.MONTH) + 1, $dexp2.getDrugExposureEndDateCal().get(Calendar.DAY_OF_MONTH), $dexp2.getDrugExposureEndDateCal().get(Calendar.HOUR), $dexp2.getDrugExposureEndDateCal().get(Calendar.MINUTE), $dexp2.getDrugExposureEndDateCal().get(Calendar.SECOND)
      );
      System.out.println(s);    
      System.out.flush();  
end
/*

// This just follows the first rule and is a basic check to identify all patients on any dosage or form of epinephrine and a beta-blocker at the same time (epinephrine first)
rule "EPINEPHRINE - BETA-BLOCKERS - EPI FIRST -- NO FILTER"
    when
      // First, we look for patients exposed to epinephrine on the ingredient level
      $clinDrugConcept1 : ConceptSetItem(csName == "Epinephrines Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      // Second, we similarly look for exposure to a beta-blocker on the ingredient level
      $clinDrugConcept2 : ConceptSetItem(csName == "Beta-Blockers Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())
      // Next, we identify the specific drug exposures for both epinephrine and the beta-blocker
      // The epinephrine concept set excludes opthalmic and inhaled epinephrine
      $clinDrugConcept3 : ConceptSetItem(csName == "Epinephrines") 
      $clinDrugConcept4 : ConceptSetItem(csName == "Beta-Blockers")
      //  epinephrine before beta-blocker
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal.get(Calendar.DAY_OF_MONTH) == currentDate.get(Calendar.DAY_OF_MONTH) && drugExposureStartDateCal.get(Calendar.YEAR) == currentDate.get(Calendar.YEAR)
    && drugConceptId != null && drugConceptId == $clinDrugConcept4.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())
      $dexp2 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= $dexp1.getDrugExposureStartDateCal()
    && drugExposureEndDateCal != null && drugExposureEndDateCal >= $dexp1.getDrugExposureStartDateCal()
          && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())    
      // This creates the patient as an object that can be used in the RHS state in the right hand side of the rule
      $person : Person(personId == $de1.getPersonId())
    then  
      // This creates a new "state" for any patients who are found to be on both drugs...
      // This state can be used as an input on further rules to quickly filter to only those patients who have made it through previous rules
      RHSState rhsCur = new RHSState("basic concomitant exposure of epinephrine and a beta-blocker", "yes", $person);
      insertLogical(rhsCur);
      // The output string reports simply that a potential interaction was identified through concurrent drug exposures and lists the drug IDs
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Epinephrine: %s; Beta-Blocker: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tbasic concomitant exposure\t%s\t%d-%d-%d %d:%d:%d\t%d-%d-%d %d:%d:%d\t%s\t%d-%d-%d %d:%d:%d\t%d-%d-%d %d:%d:%d",
            currentDateStr,
      $person.getPersonId(),
      $dexp1.getDrugConceptId(),
      $dexp1.getDrugExposureStartDateCal().get(Calendar.YEAR), $dexp1.getDrugExposureStartDateCal().get(Calendar.MONTH) + 1, $dexp1.getDrugExposureStartDateCal().get(Calendar.DAY_OF_MONTH), $dexp1.getDrugExposureStartDateCal().get(Calendar.HOUR), $dexp1.getDrugExposureStartDateCal().get(Calendar.MINUTE), $dexp1.getDrugExposureStartDateCal().get(Calendar.SECOND),
      $dexp1.getDrugExposureEndDateCal().get(Calendar.YEAR), $dexp1.getDrugExposureEndDateCal().get(Calendar.MONTH) + 1, $dexp1.getDrugExposureEndDateCal().get(Calendar.DAY_OF_MONTH), $dexp1.getDrugExposureEndDateCal().get(Calendar.HOUR), $dexp1.getDrugExposureEndDateCal().get(Calendar.MINUTE), $dexp1.getDrugExposureEndDateCal().get(Calendar.SECOND),
      $dexp2.getDrugConceptId(),
      $dexp2.getDrugExposureStartDateCal().get(Calendar.YEAR), $dexp2.getDrugExposureStartDateCal().get(Calendar.MONTH) + 1, $dexp2.getDrugExposureStartDateCal().get(Calendar.DAY_OF_MONTH), $dexp2.getDrugExposureStartDateCal().get(Calendar.HOUR), $dexp2.getDrugExposureStartDateCal().get(Calendar.MINUTE), $dexp2.getDrugExposureStartDateCal().get(Calendar.SECOND),
      $dexp2.getDrugExposureEndDateCal().get(Calendar.YEAR), $dexp2.getDrugExposureEndDateCal().get(Calendar.MONTH) + 1, $dexp2.getDrugExposureEndDateCal().get(Calendar.DAY_OF_MONTH), $dexp2.getDrugExposureEndDateCal().get(Calendar.HOUR), $dexp2.getDrugExposureEndDateCal().get(Calendar.MINUTE), $dexp2.getDrugExposureEndDateCal().get(Calendar.SECOND)
      );
      System.out.println(s);      
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Anaphylaxis Indication (Systemic Eipnephrine)"
// need to create concept sets for "Systemic" injection?
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        $clinDrugConcept1 : ConceptSetItem(csName == "Epinephrines Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId()) 

        $clinDrugConcept2 : ConceptSetItem(csName == "Epinephrines") 
        $clinIndicationConcept1 : ConceptSetItem(csName == "Anaphylaxis Indication")
        // epinephrine drug exposure has anaphylaxis indication
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
          && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
          && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId()
          && indicationConceptId == $clinIndicationConcept1.getConceptId())
    then
  // This creates a new "state" for any patients who are found to be on epinephrine with an indication for anaphylaxis
        String debugDexp = String.format("DEBUG\n\tdexp1: %s\tindication1: %s", $dexp1.getDrugExposureId(), $dexp1.getIndicationConceptId());
        System.out.println(debugDexp);

        RHSState rhsNN = new RHSState("epinephrine, beta-blocker, epi indication for anaphylaxis yes", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient with epinephrine indication for anaphylaxis: %s.\n\tClinical implication: (TODO)\n\tMitigating factor: (TODO)\n\tRecommendation: Benefit likely to outweigh risk. Acute hypertensive reaction is possible.\n\tExplanation: (TODO)", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId(),
          $dexp1.getIndicationConceptId());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine, beta-blocker, epi indication for anaphylaxis yes", currentDateStr, $person.getPersonId());
      System.out.println(s);   

end

rule "EPINEPHRINE - BETA-BLOCKERS -- Timolol (Oral)"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId()))
  // Next, we bring in the patient's Timolol exposure on the ingredient level and the clinical drug level (Eye Drops only b/c they're the only form that have this effect)
        $clinDrugConcept1 : ConceptSetItem(csName == "Timolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        $clinDrugConcept2 : ConceptSetItem(csName == "Timolols Oral")
        $clinRouteConcept1 : ConceptSetItem(csName == "Oral Route")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId() && routeConceptId == $clinRouteConcept1.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())           
    then
  // This creates a new "state" for any patients who are found to be on timolol eye drops
        RHSState rhsNN = new RHSState("epinephrine, timolol, oral yes", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: High risk of acute hypertensive reaction.\n\tMitigating factor: Timolol oral given.\n\tRecommendation: Use only if benefit outweighs risk. Acute hypertensive reaction likely.\n\tExplanation: (TODO) Timolol is a nonselective beta-blocker, and timolol oral have been shown to produce systemic beta-blockade. This could lead to an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine, timolol, oral yes", currentDateStr, $person.getPersonId());
      System.out.println(s);  
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Timolol (Eye Drops)"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId()))
  // Next, we bring in the patient's Timolol exposure on the ingredient level and the clinical drug level (Eye Drops only b/c they're the only form that have this effect)
        $clinDrugConcept1 : ConceptSetItem(csName == "Timolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        $clinDrugConcept2 : ConceptSetItem(csName == "Timolols Eye Drops")
        $clinRouteConcept1 : ConceptSetItem(csName == "Eye Drops Route")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId() && routeConceptId == $clinRouteConcept1.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())           
    then
  // This creates a new "state" for any patients who are found to be on timolol eye drops
        RHSState rhsNN = new RHSState("epinephrine, timolol, eye drops yes", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Intermediate risk of acute hypertensive reaction.\n\tMitigating factor: Timolol eye drops given.\n\tRecommendation: Assess risk and take action if necessary. Acute hypertensive reaction is possible.\n\tExplanation: (TODO) Timolol is a nonselective beta-blocker, and timolol eye drops have been shown to produce systemic beta-blockade. This could lead to an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine, timolol, eye drops yes", currentDateStr, $person.getPersonId());
      System.out.println(s);    
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Metoprolol"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId()))
  // Next, we bring in the patient's Metoprolol exposure on the ingredient level and the clinical drug level
        $clinDrugConcept1 : ConceptSetItem(csName == "Metoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        $clinDrugConcept2 : ConceptSetItem(csName == "Metoprolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())    
    then
  // This creates a new "state" for any patients who are found to be on metoprolol
        RHSState rhsNN = new RHSState("epinephrine, metoprolol", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Metoprolol given.\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: (TODO)", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine and metoprolol", currentDateStr, $person.getPersonId());
      System.out.println(s);          
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Nebivolol"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId()))
  // Next, we bring in the patient's Nebivolol exposure on the ingredient level and the clinical drug level
        $clinDrugConcept1 : ConceptSetItem(csName == "Nebivolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        $clinDrugConcept2 : ConceptSetItem(csName == "Nebivolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())          
    then
  // This creates a new "state" for any patients who are found to be on nebivolol and a cyp2d6 poor metabolizers
        RHSState rhsNN = new RHSState("epinephrine, nebivolol", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Nebivolol given.\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: (TODO).", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine and nebivolol", currentDateStr, $person.getPersonId());
      System.out.println(s);              
end
/*
// The twelfth rule is the first of a set of two about Atenolol
// This rule fires for patients who are on Atenolol but have a creatinine clearance level below 40 mL/min
rule "EPINEPHRINE - BETA-BLOCKERS -- Atenolol (Clearance)"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId()))
  // Next, we bring in the patient's Atenolol exposure on the ingredient level
        $clinDrugConcept1 : ConceptSetItem(csName == "Atenolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Then the patient's Atenolol exposure on the clinical drug level
        $clinDrugConcept2 : ConceptSetItem(csName == "Atenolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())
  // using eGFR as a measure for kidney function, alert if below 60 based on the rule specification
        // TODO: fix to ensure measurement is not too distant in the past, e,g, use within48Hours
    $measurement : Measurement(personId == $person.getPersonId() && (measurementConceptId == 3053283 || measurementConceptId == 3016723) && valueAsNumber < 60 && (unitSourceValue == 'mL/min/1.73m2' || unitSourceValue ==  'ml/min/1.73sq.m') && (measurementDate >= within48hours.getTime()) && (measurementDate <= currentDate.getTime()))
    then  
  // This creates a new "state" for any patients who are found to be on Atenolol with low creatinine clearance
        RHSState rhsNN = new RHSState("epinephrine, atenolol, and low clearance", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Atenolol and a poor kidney function based on eGFR measurement (%s %s, compared to the threshold value of 60 mL/min).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Atenolol undergoes renal elimination and may produce nonselective beta-blockade with significant renal impairment, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $measurement.getValueAsNumber(),
          $measurement.getUnitSourceValue());
        System.out.println(s);
        System.out.println("MEASUREMENT DATE: " + $measurement.getMeasurementDate() + "\nWITHIN 48 HOURS DATE: " + within48hours.getTime() + "\nCURRENT DATE: " + currentDate.getTime());
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine, atenolol, and low clearance", currentDateStr, $person.getPersonId());
      System.out.println(s);  
end
*/
/*
// The thirteenth rule is the second of a set of two about Atenolol
// This rule fires for patients who are on Atenolol and have adequate creatinine clearance, but are on high doses of Atenolol
rule "EPINEPHRINE - BETA-BLOCKERS -- Atenolol"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person) 
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId())) 
  // Next, make sure the patient isn't renally impaired by checking the creatinine clearance rule
  // not ($rhs2 : RHSState(stateName == "epinephrine, atenolol, and low clearance" && state == "yes" && person.getPersonId() == $person.getPersonId()))
  // Next, we bring in the patient's Atenolol exposure on the ingredient level
        $clinDrugConcept1 : ConceptSetItem(csName == "Atenolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Then the patient's Atenolol exposure on the clinical drug level along with a dosage check for over 100
        $clinDrugConcept2 : ConceptSetItem(csName == "Atenolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() )
    //&& dailyDosage != null && dailyDosage >= 100 )                
    then  
  // This creates a new "state" for any patients who are found to be on Atenolol with high dosage
        RHSState rhsNN = new RHSState("epinephrine and high atenolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: (TODO)\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: (TODO)", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine and atenolol", currentDateStr, $person.getPersonId());
      System.out.println(s);    
end

// The fourteenth rule is the second of a set of two about Bisoprolol
// This rule fires for patients who are on Bisoprolol but have a creatinine clearance level below 40 mL/min
rule "EPINEPHRINE - BETA-BLOCKERS -- Bisoprolol (Clearance)"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId())) 
        // Next, we bring in the patient's Bisoprolol exposure on the ingredient level
        $clinDrugConcept1 : ConceptSetItem(csName == "Bisoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Then the patient's Bisoprolol exposure on the clinical drug level
        $clinDrugConcept2 : ConceptSetItem(csName == "Bisoprolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())
  // using eGFR as a measure for kidney function, alert if below 60 based on the rule specification
      // TODO: fix to ensure measurement is not too distant in the past, e,g, use within48Hours
    $measurement : Measurement(personId == $person.getPersonId() && (measurementConceptId == 3053283 || measurementConceptId == 3016723) && valueAsNumber < 60 && (unitSourceValue == 'mL/min/1.73m2' || unitSourceValue ==  'ml/min/1.73sq.m') && (measurementDate >= within48hours.getTime()) && (measurementDate <= currentDate.getTime()))
    then  
  // This creates a new "state" for any patients who are found to be on Bisoprolol with low creatinine clearance
        RHSState rhsNN = new RHSState("epinephrine, bisoprolol, and low clearance", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Bisoprolol and poor kidney function as measure by eGFR (%s %s, compared to the threshold value of 60 mL/min).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Bisoprolol undergoes renal elimination and may produce nonselective beta-blockade with significant renal impairment, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $measurement.getValueAsNumber(),
          $measurement.getUnitSourceValue());
        System.out.println(s);
        System.out.println("MEASUREMENT DATE: " + $measurement.getMeasurementDate() + "\nWITHIN 48 HOURS DATE: " + within48hours.getTime() + "\nCURRENT DATE: " + currentDate.getTime());
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine, bisoprolol, and low clearance", currentDateStr, $person.getPersonId());
      System.out.println(s);    
end
*/
// The fifteenth rule is the second of a set of two about Bisoprolol
// This rule fires for patients who are on Bisoprolol and have adequate creatinine clearance, but are on high doses of Bisoprolol

/*
rule "EPINEPHRINE - BETA-BLOCKERS -- Bisoprolol"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId()))   
  // Next, make sure the patient isn't renally impaired by checking the creatinine clearance rule
  // not ($rhs2 : RHSState(stateName == "epinephrine, bisoprolol, and low clearance" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // Next, we bring in the patient's Bisoprolol exposure on the ingredient level
        $clinDrugConcept1 : ConceptSetItem(csName == "Bisoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Then the patient's Bisoprolol exposure on the clinical drug level along with a dosage check for over 20
        $clinDrugConcept2 : ConceptSetItem(csName == "Bisoprolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() )
    //&& dailyDosage != null && dailyDosage > 20 )                
    then
  // This creates a new "state" for any patients who are found to be on Bisoprolol with high dosage
        RHSState rhsNN = new RHSState("epinephrine and high bisoprolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of bisoprolol (Daily Dosage: %s mg/day, compared to the threshold value of 20.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: At doses of 20 mg/day or higher, bisoprolol can result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine and bisoprolol", currentDateStr, $person.getPersonId());
      System.out.println(s);  
end

// The sixteenth rule is about Betaxolol
// This rule checks to see if a patient has been given betaxolol where the betaxolol dose is > 20 mg/day
rule "EPINEPHRINE - BETA-BLOCKERS -- Betaxolol"
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId())) 
        // Next, we bring in the patient's Betaxolol exposure on the ingredient level
        $clinDrugConcept1 : ConceptSetItem(csName == "Betaxolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Betaxolol clinical drug exposure and dosage check (no alert if below threshold of 20 mg/day)
        $clinDrugConcept2 : ConceptSetItem(csName == "Betaxolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() )
    //&& dailyDosage != null && dailyDosage > 20 )                
    then  
  // This creates a new "state" for any patients who are found to be on Betaxolol with high dosage  
        RHSState rhsNN = new RHSState("epinephrine and high betaxolol dose", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: (TODO)\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Large doses of betaxolol may result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine and betaxolol", currentDateStr, $person.getPersonId());
      System.out.println(s);    
end

// The seventeenth and final rule is about Esmolol
// This rule checks to see if a patient has been given Esmolol where the dose is > 300 mcg/kg/min
rule "EPINEPHRINE - BETA-BLOCKERS -- Esmolol" // THIS RULE IS INCOMPLETE, NOT FUNCTIONING CORRECTLY
    when
  // This checks the state of the patients to identify only those who were identified to be on both medications of interest
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)  
        not ($rhs2 : RHSState(stateName == "epinephrine, beta-blocker, epi indication for anaphylaxis yes" && state == "yes" && person.getPersonId() == $person.getPersonId())) 
        // Next, we bring in the patient's Esmolol exposure on the ingredient level
        $clinDrugConcept1 : ConceptSetItem(csName == "Esmolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Esmolol clinical drug exposure and dosage check (no alert if below threshold of 300 mcg/kg/min)
        $clinDrugConcept2 : ConceptSetItem(csName == "Esmolols")
        $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
          && drugExposureStartDateCal != null && drugExposureStartDateCal <= currentDate && drugExposureEndDateCal >= currentDate
    && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
    && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())
    //&& ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage != null && dailyDosage > 300 )                
    then
  // This creates a new "state" for any patients who are found to be on Esmolol with high dosage
        RHSState rhsNN = new RHSState("epinephrine and high esmolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // This outputs the recommendations and rationale for the patient because this is a leaf node       
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: (TODO)\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: (TODO)", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
      s = String.format("DATA\t%s\t%s\tEpinephrine and a Beta-blocker\tepinephrine and esmolol", currentDateStr, $person.getPersonId());
      System.out.println(s);      
end
*/